{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","setImages","useEffect","then","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAiB9C,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAAAS,GAAU,OAAMP,GAAN,mBAAoBO,OAC7CN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAnBc,SAACP,GAEvBF,EAAeE,EAAEQ,OAAOF,a,+BCNnBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAOF,GAFP,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAYXM,GAZW,4CAAH,sDCAPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEjC,OACI,sBAAKc,UAAU,OAAf,UACG,qBAAKC,IAAMf,EAAMgB,IAAON,IACxB,4BAAKA,QCHHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,EAETd,mBAAS,IAFA,mBAE9B2B,EAF8B,KAEtBO,EAFsB,KAarC,OATAC,qBAAU,WACNtB,EAAQC,GACHsB,KAAMF,KAGZ,CAAEpB,IAKD,qCACI,6BAAMA,IACN,qBAAKgB,UAAU,YAAf,SAGYH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAE,EAAF,eAESA,GADCA,EAAIC,aCrB7BY,EAAe,WAAO,IAAD,EAEMrC,mBAAS,CAAC,cAFhB,mBAEvBQ,EAFuB,KAEXT,EAFW,KAI9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAE7B,uBAGA,6BAEQS,EAAWe,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAECA,SAAWA,GADLA,Y,MCd/BwB,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.cfdf5b79.chunk.js","sourcesContent":["import React,{ useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n    const handleInputChange = (e) => {\r\n\r\n        setInputValue( e.target.value)\r\n\r\n    }\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault(); \r\n\r\n        if(inputValue.trim().length > 2 ) {\r\n            setCategories( categories => [ inputValue,...categories] );\r\n            setInputValue('');\r\n        }            \r\n\r\n    }\r\n    return (\r\n        <form onSubmit={ handleSubmit } >\r\n            <input\r\n                type=\"text\" \r\n                value={ inputValue }  \r\n                onChange={ handleInputChange }                        \r\n            />            \r\n        </form>\r\n    )\r\n\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","\r\n\r\nexport const getGifs = async( category) =>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=2e0TBU3wQO6IWdfqwQ4h0kLjuB6D91sQ`\r\n    const resp = await fetch( url );\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })    \r\n    return  gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ title, url }) => {\r\n   \r\n    return (\r\n        <div className=\"card\">\r\n           <img src={ url } alt= { title } />\r\n           <p>{ title }</p>         \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import React, {useState, useEffect} from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const [images, setImages] = useState([]);\r\n  \r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then( setImages );\r\n\r\n        \r\n    }, [ category ]);\r\n\r\n       \r\n\r\n    return (\r\n        <>\r\n            <h3>{ category }</h3>\r\n            <div className=\"card-grid\">       \r\n            \r\n                    {\r\n                        images.map(img => (\r\n                            < GifGridItem\r\n                                key={ img.id }\r\n                                { ...img }\r\n                                                    \r\n                            />    \r\n                        ))                       \r\n                                \r\n                }\r\n                        \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\nexport const GifExpertApp = () => {   \r\n\r\n    const [categories, setCategories] = useState(['One Punch'])\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories }/>\r\n\r\n            <hr />\r\n\r\n            \r\n            <ol>\r\n                {\r\n                    categories.map( category => (\r\n                        <GifGrid\r\n                         key={ category }\r\n                         category={ category }\r\n                         /> \r\n                         ))\r\n                }\r\n            </ol>           \r\n        </>\r\n    )\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n  \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}